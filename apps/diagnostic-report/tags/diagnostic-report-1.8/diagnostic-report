#!/bin/bash

# Version: 1.4
# Description: Utility to report information about the operating system
# Dependencies: zenity, xresprobe
# Authors: TODO 
# Copyright: 2006,2007,2008 Junta de Andalucía 
# License: GNU Public License 2
#
# TODO:
# - Añadir identificador al fichero generado

TEXTDOMAIN=diagnostic-report

# Functions
show_file () {
  FILE_TO_SHOW=$1
  echo '----------------------------------------------------------------------' >> $OUTPUT_FILE
  echo $(eval_gettext "FILE: \$FILE_TO_SHOW") >> $OUTPUT_FILE

  if [ -r $FILE_TO_SHOW ]; then
    cat $FILE_TO_SHOW >> $OUTPUT_FILE
    return
  fi

  if [ ! -a $FILE_TO_SHOW ]; then
    echo $(eval_gettext "ERROR: File does not exist") >> $OUTPUT_FILE
    return
  fi

}


show_binary_exit () {
  BINARY_TO_SHOW="$*"
  echo '----------------------------------------------------------------------' >> $OUTPUT_FILE
  echo $(eval_gettext "COMMAND: \$BINARY_TO_SHOW") >> $OUTPUT_FILE

  eval "$BINARY_TO_SHOW" >> $OUTPUT_FILE
}

if [ "$(whoami)" != "root" ]; then
  zenity --error --title "Error" --text \
$(eval_gettext "This application needs
root privileges")
  exit 1
fi



# Constants
FINAL_LOGFILE='diagnostics_report'
if [ -n "$SUDO_USER" ]; then
	# include XDG dirs
	test -f $SUDO_USER/.config/user-dirs.dirs && . /home/$SUDO_USER/.config/user-dirs.dirs
        if [ -n $XDG_DESKTOP_DIR ]
	then
		DESTDIR=/home/$SUDO_USER/$XDG_DESKTOP_DIR
	else
		DESTDIR=/home/$SUDO_USER
	fi
	REAL_USER=$SUDO_USER
else
	# include XDG dirs
	test -f $HOME/.config/user-dirs.dirs && . $HOME/.config/user-dirs.dirs
	if [ -n $XDG_DESKTOP_DIR ]
	then
		DESTDIR=$HOME/$XDG_DESKTOP_DIR
	else
		DESTDIR=$HOME
	fi
	REAL_USER=$USER
fi
[ ! -d $DESTDIR ] && mkdir -p $DESTDIR
OUTPUT_FILE=$(mktemp)
APP_NAME=$(eval_gettext "Diagnostics Report")

> $OUTPUT_FILE

# main

zenity --question --title "$APP_NAME" --text \
$(eval_gettext "This utility will make a report with some useful info from your computer which you can, voluntarily, send to the User Assistance Service to help you solving your problem.
This report just contains technical info and, will never collect personal info like passwords, mails, etc.
Once the report is done, you will be able to review its content.

Next, report generation will start.")

if [ $? == 1 ]; then
  exit
fi

# system wide related info
show_file /etc/lsb-release
show_binary_exit 'dmesg'

# users related info
show_binary_exit 'whoami'
show_binary_exit 'date'
show_binary_exit 'cut -d: -f 1,3,4 /etc/passwd'
show_file '/etc/group'

# X related info
show_file '/etc/X11/xorg.conf'
show_file '/var/log/Xorg.0.log'
show_binary_exit 'ddcprobe'

# disks related info
show_binary_exit 'mount'
show_binary_exit 'df -h'
show_file '/etc/fstab'
show_file '/etc/mtab'

# devices related info
show_binary_exit 'ls -lR /dev'
show_binary_exit 'lsusb'
show_binary_exit 'lsusb -v'

# network related info
show_binary_exit '/sbin/ifconfig'
show_binary_exit '/sbin/route -n'
show_file '/etc/network/interfaces'

# modules related info
show_file '/etc/modules'
show_binary_exit '/sbin/lsmod'

# grub related info
show_file '/boot/grub/menu.lst'

# 'proc' related info
for i in /proc/{apm,cmdline,cpuinfo,crypto,devices,dma,execdomains,fb,filesystems,interrupts,iomem,ioports,loadavg,locks,meminfo,misc,modules,mounts,mtrr,partitions,bus/pci/devices,slabinfo,stat,swaps,uptime,version} ; do
   show_file $i
done

# suitable lspci info for 'discover'
show_binary_exit "(lspci -n ; lspci) | sort"

zenity --question --title "$APP_NAME" --text \
$(eval_gettext "Report has been successfuly generated.

Do you wish to review the report?")

if [ $? == 0 ]; then
  zenity  --text-info --title "$APP_NAME" --width=700 --height=500 --filename $OUTPUT_FILE
fi

if [ ! -f "$DESTDIR/$FINAL_LOGFILE.bz2" ]; then
  mv $OUTPUT_FILE $DESTDIR/$FINAL_LOGFILE
  bzip2 $DESTDIR/$FINAL_LOGFILE
  chown $REAL_USER:users "$DESTDIR/$FINAL_LOGFILE.bz2"
  rm -f $DESTDIR/$FINAL_LOGFILE
  zenity --info --title "$APP_NAME" --text $(eval_gettext "Report has been stored compressed in \$DESTDIR/\$FINAL_LOGFILE.bz2")
else
  zenity --warning --title "$APP_NAME" --text \
$(eval_gettext "It does already exist a report file in \$DESTDIR/\$FINAL_LOGFILE.bz2, maybe, from a previous run of this utility

Do you want to overwrite it with the new report?")

  if [ $? == 0 ]; then
    rm -f $DESTDIR/$FINAL_LOGFILE.bz2
    mv $OUTPUT_FILE $DESTDIR/$FINAL_LOGFILE
    bzip2 $DESTDIR/$FINAL_LOGFILE
    chown $REAL_USER:users "$DESTDIR/$FINAL_LOGFILE.bz2"
    rm -f $DESTDIR/$FINAL_LOGFILE
    zenity --info --title "$APP_NAME" --text $(eval_gettext "Report has been stored compressed in \$DESTDIR/\$FINAL_LOGFILE.bz2")
  fi
fi
